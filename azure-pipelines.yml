trigger:
  branches:
    include:
      - '*'
  tags:
    include:
      - '*'

jobs:
- template: .ci/build_and_test.yml
  parameters:
    virtual_machine_image: ubuntu-16.04
    toolchain: stable
    name: "linux_stable"
    display_name: "Linux (Stable)"
- template: .ci/build_and_test.yml
  parameters:
    virtual_machine_image: ubuntu-16.04
    toolchain: beta
    name: "linux_beta"
    display_name: "Linux (Beta)"
- template: .ci/build_and_test.yml
  parameters:
    virtual_machine_image: ubuntu-16.04
    toolchain: nightly
    name: "linux_nightly"
    display_name: "Linux (Nightly)"
- template: .ci/build_and_test.yml
  parameters:
    virtual_machine_image: macOS-10.13
    toolchain: stable
    name: "darwin_stable"
    display_name: "Darwin (Stable)"
- template: .ci/build_and_test.yml
  parameters:
    virtual_machine_image: macOS-10.13
    toolchain: beta
    name: "darwin_beta"
    display_name: "Darwin (Beta)"
- template: .ci/build_and_test.yml
  parameters:
    virtual_machine_image: macOS-10.13
    toolchain: nightly
    name: "darwin_nightly"
    display_name: "Darwin (Nightly)"
- template: .ci/build_and_test.yml
  parameters:
    virtual_machine_image: vs2017-win2016
    toolchain: stable
    name: "windows_stable"
    display_name: "Windows (Stable)"
- template: .ci/build_and_test.yml
  parameters:
    virtual_machine_image: vs2017-win2016
    toolchain: beta
    name: "windows_beta"
    display_name: "Windows (Beta)"
- template: .ci/build_and_test.yml
  parameters:
    virtual_machine_image: vs2017-win2016
    toolchain: nightly
    name: "windows_nightly"
    display_name: "Windows (Nightly)"
- job: 'release'
  displayName: 'Publish and release'
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/release-v')
  continueOnError: false
  dependsOn:
    - linux_stable
    - linux_beta
    - linux_nightly
    - darwin_stable
    - darwin_beta
    - darwin_nightly
    - windows_stable
    - windows_beta
    - windows_nightly
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
    - task: GithubRelease@0
      displayName: 'Create GitHub Release'
      inputs:
        githubConnection: davidtwco
        repositoryName: davidtwco/rust-wooting-sdk
    - template: .ci/install_rust.yml
    - bash: |
        cargo publish --manifest-path wooting-analog-sdk-sys/Cargo.toml --token $CARGO_TOKEN
      displayName: "Publish wooting-analog-sdk-sys"
      env:
        CARGO_TOKEN: $(cargo_token)
    - bash: |
        cargo publish --manifest-path wooting-rgb-sdk-sys/Cargo.toml --token $CARGO_TOKEN
      displayName: "Publish wooting-rgb-sdk-sys"
      env:
        CARGO_TOKEN: $(cargo_token)
    - bash: |
        cargo publish --manifest-path wooting-sdk/Cargo.toml --token $CARGO_TOKEN
      displayName: "Publish wooting-sdk"
      env:
        CARGO_TOKEN: $(cargo_token)
